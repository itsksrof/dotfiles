{
    // Extension configuration
    "extensions.autoCheckUpdates": false,
    "extensions.autoUpdate": false,
    "extensions.ignoreRecommendations": true,

    // Files configuration
    "files.associations": {
        "*.env*": "env"
    },
    
    // Editor configuration
    "editor.autoClosingBrackets": "always",
    "editor.autoClosingQuotes": "always",
    "editor.bracketPairColorization.enabled": true,
    "editor.folding": true,
    "editor.foldingImportsByDefault": false,
    "editor.foldingHighlight": true,
    "editor.lineNumbers": "relative",
    "editor.definitionLinkOpensInPeek": true,
    "editor.minimap.autohide": true,
    "editor.occurrencesHighlight": true,
    "editor.parameterHints.cycle": true,
    "editor.parameterHints.enabled": true,
    "editor.selectionHighlight": true,
    "editor.showUnused": true,
    "editor.tabCompletion": "on",
    "editor.codeLens": true,
    "editor.codeLensFontFamily": "Fira Code",
    "editor.codeLensFontSize": 12,
    "editor.suggest.filterGraceful": true,
    "editor.suggest.insertMode": "replace",
    "editor.suggest.selectionMode": "always",
    "editor.suggest.showClasses": true,
    "editor.suggest.showColors": true,
    "editor.suggest.showConstants": true,
    "editor.suggest.showConstructors": true,
    "editor.suggest.showCustomcolors": true,
    "editor.suggest.showDeprecated": true,
    "editor.suggest.showEnumMembers": true,
    "editor.suggest.showEnums": true,
    "editor.suggest.showEvents": true,
    "editor.suggest.showWords": true,
    "editor.suggest.showFields": true,
    "editor.suggest.showFunctions": true,
    "editor.suggest.showInlineDetails": true,
    "editor.suggest.showInterfaces": true,
    "editor.suggest.showIssues": true,
    "editor.suggest.showKeywords": true,
    "editor.suggest.showMethods": true,
    "editor.suggest.showModules": true,
    "editor.suggest.showOperators": true,
    "editor.suggest.showProperties": true,
    "editor.suggest.showReferences": true,
    "editor.suggest.showSnippets": true,
    "editor.suggest.showStructs": true,
    "editor.suggest.showTypeParameters": true,
    "editor.suggest.showUnits": true,
    "editor.suggest.showValues": true,
    "editor.suggest.showVariables": true,
    "editor.suggest.preview": true,
    "editor.tabSize": 4,
    "editor.useTabStops": true,
    "editor.wordWrap": "off",
    "editor.fontFamily": "Fira Code",
    "editor.fontSize": 14,
    "editor.fontLigatures": true,
    "editor.inlayHints.enabled": "on",
    "editor.inlayHints.fontFamily": "Fira Code",
    "editor.inlayHints.fontSize": 12,
    "editor.inlayHints.padding": true,

    // Indent Rainbow configuration
    "indentRainbow.updateDelay": 10,
    "indentRainbow.indicatorStyle": "light",
    "indentRainbow.lightIndicatorStyleLineWidth": 1,
    "indentRainbow.colors": [
        "rgba(235,111,146,0.7)",
        "rgba(235,188,186,0.7)",
        "rgba(49,116,143,0.7)",
        "rgba(156,207,216,0.7)"
    ],
    
    // Workbench configuration
    "workbench.activityBar.visible": false,
    "workbench.commandPalette.experimental.suggestCommands": true,
    "workbench.commandPalette.history": 50,
    "workbench.editor.enablePreview": false,
    "workbench.editor.enablePreviewFromCodeNavigation": false,
    "workbench.editor.enablePreviewFromQuickOpen": false,
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.editor.languageDetection": true,
    "workbench.startupEditor": "none",
    "workbench.colorTheme": "Ros√© Pine",

    // Golang configuration
    "go.coverMode": "count",
    "go.coverOnSave": true,
    "go.coverageDecorator": {
        "type": "gutter",
        "coveredBorderColor": "rgba(49,116,143,0.7)",
        "uncoveredBorderColor": "rgba(235,111,146,0.7)",
        "coveredGutterStyle": "blockblue",
        "uncoveredGutterStyle": "blockred"
    },
    "go.formatTool": "gofmt",
    "go.gopath": "/home/ksrof/.gvm/pkgsets/go1.20.1/global",
    "go.goroot": "/home/ksrof/.gvm/gos/go1.20.1",
    "go.inlayHints.assignVariableTypes": true,
    "go.inlayHints.compositeLiteralFields": true,
    "go.inlayHints.compositeLiteralTypes": true,
    "go.inlayHints.constantValues": true,
    "go.inlayHints.functionTypeParameters": true,
    "go.inlayHints.parameterNames": true,
    "go.inlayHints.rangeVariableTypes": true,
    "go.lintOnSave": "file",
    "go.lintTool": "staticcheck",
    "go.testOnSave": false,
    "go.enableCodeLens": {
        "runtest": true
    },
    "gopls": {
        "ui.codelenses": {
            "gc_details": false,
            "generate": true,
            "regenerate_cgo": true,
            "run_govulncheck": false,
            "test": false,
            "tidy": true,
            "upgrade_dependency": true,
            "vendor": true            
        },
        "ui.diagnostic.analyses": {
            "asmdecl": true,
            "assign": true,
            "atomic": true,
            "atomicalign": true,
            "bools": true,
            "buildtag": true,
            "cgocall": true,
            "composites": true,
            "copylocks": true,
            "deepequalerrors": true,
            "embed": true,
            "errorsas": true,
            "fieldalignment": true,
            "httpresponse": true,
            "ifaceassert": true,
            "infertypeargs": true,
            "loopclosure": true,
            "lostcancel": true,
            "nilfunc": true,
            "nilness": true,
            "printf": true,
            "shadow": true,
            "shift": true,
            "structtag": true,
            "tests": true,
            "unmarshal": true,
            "unreachable": true,
            "unsafeptr": true,
            "unusedparams": true,
            "unusedresult": true,
            "unusedwrite": true,
            "useany": true,
            "nonewvars": true,
            "noresultvalues": true,
            "undeclaredname": true,
            "unusedvariable": true
        },
        "ui.semanticTokens": true
    },

    // Rust configuration
    "rust-analyzer.assist.emitMustUse": false,
    "rust-analyzer.assist.expressionFillDefault": "todo",
    "rust-analyzer.cachePriming.enable": true,
    "rust-analyzer.cachePriming.numThreads": 0,
    "rust-analyzer.cargo.autoreload": true,
    "rust-analyzer.cargo.buildScripts.enable": true,
    "rust-analyzer.cargo.buildScripts.invocationLocation": "workspace",
    "rust-analyzer.cargo.buildScripts.invocationStrategy": "per_workspace",
    "rust-analyzer.cargo.buildScripts.overrideCommand": null,
    "rust-analyzer.cargo.buildScripts.useRustcWrapper": true,
    "rust-analyzer.cargo.features": "all",
    "rust-analyzer.cargo.noDefaultFeatures": false,
    "rust-analyzer.cargo.sysroot": "discover",
    "rust-analyzer.cargo.sysrootSrc": null,
    "rust-analyzer.checkOnSave": true,
    "rust-analyzer.check.allTargets": true,
    "rust-analyzer.check.command": "check",
    "rust-analyzer.check.features": "all",
    "rust-analyzer.check.invocationLocation": "workspace",
    "rust-analyzer.check.invocationStrategy": "per_workspace",
    "rust-analyzer.check.noDefaultFeatures": null,
    "rust-analyzer.completion.autoimport.enable": true,
    "rust-analyzer.completion.autoself.enable": true,
    "rust-analyzer.completion.callable.snippets": "fill_arguments",
    "rust-analyzer.completion.postfix.enable": true,
    "rust-analyzer.completion.privateEditable.enable": false,
    "rust-analyzer.completion.snippets.custom": {
        "Arc::new": {
            "postfix": "arc",
            "body": "Arc::new(${receiver})",
            "requires": "std::sync::Arc",
            "description": "Put the expression into an `Arc`",
            "scope": "expr"
        },
        "Rc::new": {
            "postfix": "rc",
            "body": "Rc::new(${receiver})",
            "requires": "std::rc::Rc",
            "description": "Put the expression into an `Rc`",
            "scope": "expr"
        },
        "Box::pin": {
            "postfix": "pinbox",
            "body": "Box::pin(${receiver})",
            "requires": "std::boxed::Box",
            "description": "Put the expression into a pinned `Box`",
            "scope": "expr"
        },
        "Ok": {
            "postfix": "ok",
            "body": "Ok(${receiver})",
            "description": "Wrap the expression in a `Result::Ok`",
            "scope": "expr"
        },
        "Err": {
            "postfix": "err",
            "body": "Err(${receiver})",
            "description": "Wrap the expression in a `Result::Err`",
            "scope": "expr"
        },
        "Some": {
            "postfix": "some",
            "body": "Some(${receiver})",
            "description": "Wrap the expression in an `Option::Some`",
            "scope": "expr"
        }
    },
    "rust-analyzer.diagnostics.enable": true,
    "rust-analyzer.files.watcher": "client",
    "rust-analyzer.highlightRelated.breakPoints.enable": true,
    "rust-analyzer.highlightRelated.exitPoints.enable": true,
    "rust-analyzer.highlightRelated.references.enable": true,
    "rust-analyzer.highlightRelated.yieldPoints.enable": true,
    "rust-analyzer.hover.actions.debug.enable": true,
    "rust-analyzer.hover.actions.enable": true,
    "rust-analyzer.hover.actions.gotoTypeDef.enable": true,
    "rust-analyzer.hover.actions.implementations.enable": true,
    "rust-analyzer.hover.actions.references.enable": false,
    "rust-analyzer.hover.actions.run.enable": true,
    "rust-analyzer.hover.documentation.enable": true,
    "rust-analyzer.hover.documentation.keywords.enable": true,
    "rust-analyzer.hover.links.enable": true,
    "rust-analyzer.imports.granularity.enforce": false,
    "rust-analyzer.imports.granularity.group": "crate",
    "rust-analyzer.imports.group.enable": true,
    "rust-analyzer.imports.merge.glob": true,
    "rust-analyzer.imports.prefer.no.std": false,
    "rust-analyzer.imports.prefix": "plain",
    "rust-analyzer.inlayHints.bindingModeHints.enable": true,
    "rust-analyzer.inlayHints.chainingHints.enable": true,
    "rust-analyzer.inlayHints.closingBraceHints.enable": true,
    "rust-analyzer.inlayHints.closingBraceHints.minLines": 25,
    "rust-analyzer.inlayHints.closureReturnTypeHints.enable": "never",
    "rust-analyzer.inlayHints.discriminantHints.enable": "never",
    "rust-analyzer.inlayHints.expressionAdjustmentHints.enable": "never",
    "rust-analyzer.inlayHints.expressionAdjustmentHints.hideOutsideUnsafe": false,
    "rust-analyzer.inlayHints.expressionAdjustmentHints.mode": "prefix",
    "rust-analyzer.inlayHints.lifetimeElisionHints.enable": "never",
    "rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames": false,
    "rust-analyzer.inlayHints.maxLength": 25,
    "rust-analyzer.inlayHints.parameterHints.enable": true,
    "rust-analyzer.inlayHints.reborrowHints.enable": "never",
    "rust-analyzer.inlayHints.renderColons": true,
    "rust-analyzer.inlayHints.typeHints.enable": true,
    "rust-analyzer.inlayHints.typeHints.hideClosureInitialization": false,
    "rust-analyzer.inlayHints.typeHints.hideNamedConstructor": false,
    "rust-analyzer.joinLines.joinAssignments": true,
    "rust-analyzer.joinLines.joinElseIf": true,
    "rust-analyzer.joinLines.removeTrailingComma": true,
    "rust-analyzer.joinLines.unwrapTrivialBlock": true,
    "rust-analyzer.lens.debug.enable": true,
    "rust-analyzer.lens.enable": true,
    "rust-analyzer.lens.forceCustomCommands": true,
    "rust-analyzer.lens.implementations.enable": true,
    "rust-analyzer.lens.location": "above_name",
    "rust-analyzer.lens.references.adt.enable": false,
    "rust-analyzer.lens.references.enumVariant.enable": false,
    "rust-analyzer.lens.references.method.enable": false,
    "rust-analyzer.lens.references.trait.enable": false,
    "rust-analyzer.lens.run.enable": true,
    "rust-analyzer.procMacro.attributes.enable": true,
    "rust-analyzer.procMacro.enable": true,
    "rust-analyzer.references.excludeImports": false,
    "rust-analyzer.runnables.command": null,
    "rust-analyzer.semanticHighlighting.doc.comment.inject.enable": true,
    "rust-analyzer.semanticHighlighting.operator.enable": true,
    "rust-analyzer.semanticHighlighting.operator.specialization.enable": false,
    "rust-analyzer.semanticHighlighting.punctuation.enable": false,
    "rust-analyzer.semanticHighlighting.punctuation.separate.macro.bang": false,
    "rust-analyzer.semanticHighlighting.punctuation.specialization.enable": false,
    "rust-analyzer.semanticHighlighting.strings.enable": true,
    "rust-analyzer.signatureInfo.detail": "full",
    "rust-analyzer.signatureInfo.documentation.enable": true,
    "rust-analyzer.typing.autoClosingAngleBrackets.enable": false,
    "rust-analyzer.workspace.symbol.search.kind": "only_types",
    "rust-analyzer.workspace.symbol.search.limit": 128,
    "rust-analyzer.workspace.symbol.search.scope": "workspace",

    // Markdown configuration
    "markdown.extension.list.indentationSize": "adaptive",
    "markdown.extension.orderedList.autoRenumber": true,
    "markdown.extension.orderedList.marker": "ordered",
    "markdown.extension.preview.autoShowPreviewToSide": true,
    "markdown.extension.toc.slugifyMode": "github",
    "markdown.extension.toc.updateOnSave": true,
}
